{
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workbookDisplayName": {
            "type": "string",
            "defaultValue": "Mitre - Evaluation Workbook",
            "metadata": {
            "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
            }
        },
        "workspaceLocation": {
            "type": "string",
            "allowedValues": [
            "Azure Sentinel",
            "Azure Security Center",
            "Log Analytics"
            ],
            "defaultValue": "Azure Security Center",
            "metadata": {
            "description": "Location where to put the workbook"
            }
        },
        "logAnalyticsWorkspaceID": {
            "type": "string",
            "defaultValue": "Not required for Azure Security Center, but is needed for Sentinel/LA",
            "metadata": {
            "description": "The id of log analytics workspace this will be under"
        }
        },
        "workbookId": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
              "description": "The unique guid for this workbook instance"
            }
        }
    },
    "variables" : {
        "workbookid":"[uniqueString(parameters('workbookId'))]",
        "serializedData" : "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Mitre Evaluation Workbook\\n\\nAuthor: Jing ([@TeachJing](https://twitter.com/TeachJing)) [Youtube](https://www.youtube.com/c/teachjing)\\n\\nReview the latest 2020 Mitre Evaluation here [Mitre Evaluation](https://attackevals.mitre-engenuity.org/enterprise/carbanak_fin7/) | \\n[Results](https://attackevals.mitre-engenuity.org/enterprise/participants/?rounds=carbanak_fin7) \",\"style\":\"upsell\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"2c5b1707-0234-4b5d-ba64-ec605b468eb5\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Evaluation\",\"type\":2,\"isRequired\":true,\"isGlobal\":true,\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"mitreeval\\\\r\\\\n| extend Adversaries = (todynamic(Aggregate_Data))['Evaluation_Aggregate_Data']['Adversaries']\\\\r\\\\n| mv-expand Adversaries\\\\r\\\\n| evaluate bag_unpack(Adversaries)\\\\r\\\\n| distinct Display_Name\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"value\":\"Carbanak+FIN7\",\"typeSettings\":{\"additionalResourceOptions\":[],\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"queryType\":9},{\"id\":\"f7b008ed-00f4-4310-a5cd-4c01171f2d38\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Vendor\",\"type\":2,\"isGlobal\":true,\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"mitreeval\\\\r\\\\n| distinct Participant_Name\\\\r\\\\n| sort by Participant_Name asc\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"value\":\"Microsoft\",\"typeSettings\":{\"additionalResourceOptions\":[],\"showDefault\":false},\"queryType\":9}],\"style\":\"pills\",\"queryType\":9},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isNotEqualTo\",\"value\":\"comparisonTool\"},\"name\":\"parameters - 4\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"c8419670-ada8-48ce-8b8e-c5d6cb9a8e0e\",\"cellValue\":\"tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Evaluation Overview\",\"subTarget\":\"overview\",\"preText\":\"Evaluation Overview\",\"style\":\"link\"},{\"id\":\"11aa1957-5b9b-48db-98d4-d78789cfbc6e\",\"cellValue\":\"tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Missed Detections/Protections\",\"subTarget\":\"missedDetections\",\"style\":\"link\"},{\"id\":\"9eb24306-53b9-4cdd-baed-7b24aedf4484\",\"cellValue\":\"tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Comparison Tool\",\"subTarget\":\"comparisonTool\",\"style\":\"link\"}]},\"name\":\"links - 7\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Overview\\r\\nYou can use this workbook to help analyze the MITRE ATT&CK participant evaluations. There are tabs on top that will take you to specific evaluations and a comparison tool.\\r\\n\\r\\n## Things to remember\\r\\n- The MITRE evaluation is meant to be informative, but not determinative.\\r\\n- The tools being evaluated are only as good as the people who use it. \\r\\n- This evaluation does very extensive testing, but only within the scenarios it focuses on. \\r\\n\\r\\n## ATT&CK Descriptions\\r\\nCarbanak  is a threat group that mainly targets banks. It also refers to malware of the same name (Carbanak). It is sometimes referred to as FIN7, but these appear to be two groups using the same Carbanak malware and are therefore tracked separately.\\r\\n\\r\\n- [Carbanak - Adversary Emulation](https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/carbanak)\\r\\n- [Carbanak - Intelligence Summary](https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/carbanak/Intelligence_Summary.md)\\r\\n- [Carbanak - Attack Navigator (mitre)](https://mitre-attack.github.io/attack-navigator//#layerURL=https://attack.mitre.org/software/S0030/S0030-enterprise-layer.json) \\r\\n\\r\\nFIN7 is a financially-motivated threat group that has primarily targeted the U.S. retail, restaurant, and hospitality sectors since mid-2015. They often use point-of-sale malware. A portion of FIN7 was run out of a front company called Combi Security.\\r\\n\\r\\n- [FIN7 - Adversary Emulation](https://github.com/center-for-threat-informed-defense/adversary_emulation_library/tree/master/fin7)\\r\\n- [FIN7 - Intelligence Summary](https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/fin7/Intelligence_Summary.md)\\r\\n\",\"style\":\"info\"},\"name\":\"text - 2 - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"overview\"},\"name\":\"Overview\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\nlet testing = mitreeval\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n    | extend Detections_By_Step = Adversaries.Detections_By_Step\\\\r\\\\n    | extend Scenarios = bag_keys(Adversaries.Detections_By_Step)\\\\r\\\\n    | extend Protections = iff(isnotempty(Adversaries.Protections), 1, 0)\\\\r\\\\n    | extend ['Adversary Name'] = Adversaries.Adversary_Name\\\\r\\\\n    | project-away Adversaries, Detections_By_Step\\\\r\\\\n)\\\\r\\\\n| mv-expand Scenarios\\\\r\\\\n| extend Scenarios = tostring(Scenarios)\\\\r\\\\n| evaluate pivot(Scenarios)\\\\r\\\\n| project-reorder Participant_Name, ['Adversary Name'], ['Scenario_*'], Protections\\\\r\\\\n| join vendorNames on Participant_Name\\\\r\\\\n| extend link = strcat(\\\\\\\"https://attackevals.mitre-engenuity.org/enterprise/participants/\\\\\\\",shortName,\\\\\\\"/results.html?\\\\\\\",shortName,\\\\\\\"/?adversary=\\\\\\\",['Adversary Name'])\\\\r\\\\n| extend scoreLink = strcat(\\\\\\\"https://attackevals.mitre-engenuity.org/enterprise/participants/\\\\\\\",shortName,\\\\\\\"/?adversary=\\\\\\\",['Adversary Name'])\\\\r\\\\n| project-away Participant_Name1, shortName, ['Adversary Name'];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nlet results = mitreeval\\\\r\\\\n| extend Adversaries = (todynamic(Aggregate_Data))['Evaluation_Aggregate_Data']['Adversaries']\\\\r\\\\n| mv-expand Adversaries\\\\r\\\\n| evaluate bag_unpack(Adversaries)\\\\r\\\\n| where Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n| project Participant_Name, \\\\r\\\\n    Display_Name, \\\\r\\\\n    ['Total Detections'] = Total_Detections, \\\\r\\\\n    ['Analytic Detections'] = Analytic_Detections, \\\\r\\\\n    Telemetry_Detections, \\\\r\\\\n    ['Analytic Coverage'] = Analytic_Coverage,\\\\r\\\\n    Analytic_Coverage = split(Analytic_Coverage,\\\\\\\"/\\\\\\\")[0],\\\\r\\\\n    Analytic_NotCovered = toint(split(Analytic_Coverage,\\\\\\\"/\\\\\\\")[1])-toint(split(Analytic_Coverage,\\\\\\\"/\\\\\\\")[0]),\\\\r\\\\n    Telemetry_Coverage = split(Telemetry_Coverage,\\\\\\\"/\\\\\\\")[0], \\\\r\\\\n    Telemetry_NotCovered = toint(split(Telemetry_Coverage,\\\\\\\"/\\\\\\\")[1])-toint(split(Telemetry_Coverage,\\\\\\\"/\\\\\\\")[0]),\\\\r\\\\n    ['Telemetry Coverage'] = Telemetry_Coverage,\\\\r\\\\n    Visibility = Visibility,\\\\r\\\\n    Vis_Covered = toint(split(Visibility,\\\\\\\"/\\\\\\\")[0]),\\\\r\\\\n    Vis_NotCovered = toint(split(Visibility,\\\\\\\"/\\\\\\\")[1])-toint(split(Visibility,\\\\\\\"/\\\\\\\")[0])\\\\r\\\\n| sort by ['Total Detections'];\\\\r\\\\nresults | join testing on Participant_Name | project-away Participant_Name1\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":2,\"title\":\"Overall Vendor Evaluation Results\",\"showRefreshButton\":true,\"exportFieldName\":\"Participant_Name\",\"exportParameterName\":\"Vendor\",\"exportDefaultValue\":\"Microsoft\",\"queryType\":9,\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Participant_Name\",\"formatter\":18,\"formatOptions\":{\"linkColumn\":\"link\",\"linkTarget\":\"Url\",\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"{Vendor}\",\"representation\":\"blue\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Display_Name\",\"formatter\":5},{\"columnMatch\":\"Total Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"},\"tooltipFormat\":{\"tooltip\":\"The total number of detections from the evaluation\"}},{\"columnMatch\":\"Analytic Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"lightBlue\"}},{\"columnMatch\":\"Telemetry_Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"lightBlue\"}},{\"columnMatch\":\"Analytic Coverage\",\"formatter\":22,\"formatOptions\":{\"linkColumn\":\"scoreLink\",\"linkTarget\":\"Url\",\"compositeBarSettings\":{\"labelText\":\"[\\\"Analytic Coverage\\\"]\",\"columnSettings\":[{\"columnName\":\"Analytic_Coverage\",\"color\":\"green\"},{\"columnName\":\"Analytic_NotCovered\",\"color\":\"red\"}]}},\"tooltipFormat\":{\"tooltip\":\"The proportion of substeps that contained a detection that provides additional context(e.g. General, Tactic, Technique\"}},{\"columnMatch\":\"Analytic_Coverage\",\"formatter\":5},{\"columnMatch\":\"Analytic_NotCovered\",\"formatter\":5},{\"columnMatch\":\"Telemetry_Coverage\",\"formatter\":5,\"formatOptions\":{\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[{\"columnName\":\"Telemetry_Coverage\",\"color\":\"green\"},{\"columnName\":\"Telemetry_NotCovered\",\"color\":\"red\"}]}}},{\"columnMatch\":\"Telemetry_NotCovered\",\"formatter\":5},{\"columnMatch\":\"Telemetry Coverage\",\"formatter\":22,\"formatOptions\":{\"linkColumn\":\"scoreLink\",\"linkTarget\":\"Url\",\"compositeBarSettings\":{\"labelText\":\"[\\\"Telemetry Coverage\\\"]\",\"columnSettings\":[{\"columnName\":\"Telemetry_Coverage\",\"color\":\"green\"},{\"columnName\":\"Telemetry_NotCovered\",\"color\":\"red\"}]}},\"tooltipFormat\":{\"tooltip\":\"The proportion of substeps that produced a detection with minimal processing\"}},{\"columnMatch\":\"Visibility\",\"formatter\":22,\"formatOptions\":{\"linkColumn\":\"scoreLink\",\"linkTarget\":\"Url\",\"compositeBarSettings\":{\"labelText\":\"[\\\"Visibility\\\"]\",\"columnSettings\":[{\"columnName\":\"Vis_Covered\",\"color\":\"green\"},{\"columnName\":\"Vis_NotCovered\",\"color\":\"red\"}]}},\"tooltipFormat\":{\"tooltip\":\"The proportion of substeps with either an analytic or a telemetry detection\"}},{\"columnMatch\":\"Vis_Covered\",\"formatter\":5},{\"columnMatch\":\"Vis_NotCovered\",\"formatter\":5},{\"columnMatch\":\"Scenario_1\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"success\",\"text\":\"Tested\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"2\",\"text\":\"Not Tested\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Blank\",\"text\":\"Test\"}]}},{\"columnMatch\":\"Scenario_2\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"success\",\"text\":\"Tested\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Protections\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"success\",\"text\":\"Tested\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"2\",\"text\":\"Not Tested\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Blank\",\"text\":\"\"}],\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]}}},{\"columnMatch\":\"link\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Vendor Evaluation Link\"}},{\"columnMatch\":\"scoreLink\",\"formatter\":5},{\"columnMatch\":\"Total_Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]}}},{\"columnMatch\":\"Analytic_Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Linux_Participant\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"true\",\"representation\":\"success\",\"text\":\"True\"},{\"operator\":\"==\",\"thresholdValue\":\"false\",\"representation\":\"cancelled\",\"text\":\"False\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"{0}{1}\"}],\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]}}}],\"filter\":true,\"sortBy\":[{\"itemKey\":\"$gen_bar_Analytic Detections_3\",\"sortOrder\":2}],\"labelSettings\":[{\"columnId\":\"Participant_Name\"},{\"columnId\":\"Display_Name\"},{\"columnId\":\"Total Detections\",\"label\":\"Detection Count\",\"comment\":\"test\"},{\"columnId\":\"Analytic Detections\"},{\"columnId\":\"Telemetry_Detections\"},{\"columnId\":\"Analytic Coverage\"},{\"columnId\":\"Analytic_Coverage\"},{\"columnId\":\"Analytic_NotCovered\"},{\"columnId\":\"Telemetry_Coverage\"},{\"columnId\":\"Telemetry_NotCovered\"},{\"columnId\":\"Telemetry Coverage\"},{\"columnId\":\"Visibility\",\"label\":\"\"},{\"columnId\":\"Vis_Covered\"},{\"columnId\":\"Vis_NotCovered\"},{\"columnId\":\"Scenario_1\"},{\"columnId\":\"Scenario_2\"},{\"columnId\":\"Protections\"},{\"columnId\":\"link\"},{\"columnId\":\"scoreLink\"}]},\"sortBy\":[{\"itemKey\":\"$gen_bar_Analytic Detections_3\",\"sortOrder\":2}],\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Participant_Name\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Total_Detections\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"overview\"},\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"mitreeval\\\\r\\\\n| extend Adversaries = (todynamic(Aggregate_Data))['Evaluation_Aggregate_Data']['Adversaries']\\\\r\\\\n| mv-expand Adversaries\\\\r\\\\n| evaluate bag_unpack(Adversaries)\\\\r\\\\n| where Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n| project Participant_Name, Display_Name, Total_Detections\\\\r\\\\n| sort by Total_Detections\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"Total Detections Result\",\"queryType\":9,\"visualization\":\"categoricalbar\",\"chartSettings\":{\"group\":null,\"createOtherGroup\":0}},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"overview\"},\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"mitreeval\\\\r\\\\n| extend Adversaries = (todynamic(Aggregate_Data))['Evaluation_Aggregate_Data']['Adversaries']\\\\r\\\\n| mv-expand Adversaries\\\\r\\\\n| evaluate bag_unpack(Adversaries)\\\\r\\\\n| where Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n| project Participant_Name, Display_Name, Linux_Participant, Total_Detections, Analytic_Detections, Telemetry_Detections, Visibility\\\\r\\\\n| sort by Total_Detections\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"Telemetry + Analytic Detections\",\"queryType\":9,\"visualization\":\"unstackedbar\",\"chartSettings\":{\"xAxis\":\"Participant_Name\",\"yAxis\":[\"Analytic_Detections\",\"Telemetry_Detections\"],\"showMetrics\":false,\"showLegend\":true}},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"overview\"},\"name\":\"Telemetry + Analytic Detections\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"CustomEndpoint/1.0\\\",\\\"data\\\":null,\\\"headers\\\":[],\\\"method\\\":\\\"GET\\\",\\\"url\\\":\\\"https://attackevals.mitre-engenuity.org/downloadable_JSON/Microsoft_Results.json\\\",\\\"contentType\\\":\\\"text/plain\\\",\\\"urlParams\\\":[],\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"tablePath\\\":\\\"$.Aggregate_Data.Evaluation_Aggregate_Data.*\\\",\\\"columns\\\":[]}}],\\\"ignoreStandardHeaders\\\":true}\",\"size\":0,\"queryType\":10},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"test\"},\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"CustomEndpoint/1.0\\\",\\\"data\\\":null,\\\"headers\\\":[],\\\"method\\\":\\\"GET\\\",\\\"url\\\":\\\"https://attackevals.mitre-engenuity.org/downloadable_JSON/Microsoft_Results.json\\\",\\\"contentType\\\":\\\"text/plain\\\",\\\"urlParams\\\":[],\\\"transformers\\\":[{\\\"type\\\":\\\"jsonpath\\\",\\\"settings\\\":{\\\"tablePath\\\":\\\"$.Adversaries[?(@.Adversary_Name==\\\\\\\"carbanak_fin7\\\\\\\")].Detections_By_Step.*.*.*\\\",\\\"columns\\\":[]}}],\\\"ignoreStandardHeaders\\\":true}\",\"size\":0,\"queryType\":10},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"test\"},\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let mitre = adx(\\\"https://teachjing.westus.kusto.windows.net/securitydata\\\").mitreeval;\\r\\nmitre\\r\\n| project Participant_Name, Adversaries\\r\\n| mv-expand Adversaries\\r\\n| where Adversaries['Adversary_Name'] == \\\"carbanak_fin7\\\"\\r\\n| where Participant_Name == \\\"{Vendor}\\\"\\r\\n| mv-expand Scenarios = Adversaries['Detections_By_Step']\\r\\n| mv-apply Scenarios on (\\r\\n    extend Scenario = tostring(bag_keys(Scenarios)[0])\\r\\n    | extend Steps = Scenarios[Scenario]['Steps']\\r\\n)\\r\\n| where Scenario == \\\"{SelectedScenario}\\\"\\r\\n| mv-expand Steps\\r\\n| project-away Adversaries, Scenarios\\r\\n| evaluate bag_unpack(Steps)\\r\\n| extend totalsteps = array_length(Substeps)\\r\\n| project Step = Step_Num, Step_Name, Total_Steps = totalsteps\",\"size\":0,\"timeContext\":{\"durationMs\":86400000},\"exportFieldName\":\"Step_Name\",\"exportParameterName\":\"SelectedStep\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"vendorDetails\"},\"name\":\"query - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let mitre = adx(\\\"https://teachjing.westus.kusto.windows.net/securitydata\\\").mitreeval;\\r\\nmitre\\r\\n| project Participant_Name, Adversaries\\r\\n| mv-expand Adversaries\\r\\n| where Adversaries['Adversary_Name'] == \\\"carbanak_fin7\\\"\\r\\n| where Participant_Name == \\\"Microsoft\\\"\\r\\n| mv-expand Scenarios = Adversaries['Detections_By_Step']\\r\\n| mv-apply Scenarios on (\\r\\n    extend Scenario = tostring(bag_keys(Scenarios)[0])\\r\\n    | extend Steps = Scenarios[Scenario]['Steps']\\r\\n)\\r\\n| where Scenario == \\\"{SelectedScenario}\\\"\\r\\n| mv-expand Steps\\r\\n| project-away Adversaries, Scenarios\\r\\n| evaluate bag_unpack(Steps)\\r\\n| extend totalsteps = array_length(Substeps)\\r\\n| where Step_Name == \\\"{SelectedStep}\\\"\\r\\n| mv-expand Substeps\\r\\n| evaluate bag_unpack(Substeps)\\r\\n| evaluate bag_unpack(Tactic)\\r\\n| evaluate bag_unpack(Technique)\\r\\n| evaluate bag_unpack(Subtechnique)\\r\\n| evaluate bag_unpack(Detections)\\r\\n| project Step_Name, Substep, Criteria, Detections, Tactic_Id, Tactic_Name, Technique_Id, Technique_Name, Subtechnique_Id, Subtechnique_Name\",\"size\":0,\"title\":\"Sub Steps\",\"noDataMessage\":\"Please select a parent step to view corresponding sub steps\",\"noDataMessageStyle\":4,\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"vendorResults\"},\"name\":\"query - 10\"},{\"type\":1,\"content\":{\"json\":\"\"},\"name\":\"text - 14\"},{\"type\":1,\"content\":{\"json\":\"\"},\"name\":\"text - 17\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Participant Missed Detections\\r\\n\\r\\nThis will provide specific details into missed detections for the selected vendor. \",\"style\":\"info\"},\"name\":\"text - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\nlet testing = mitreeval\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n    | where Participant_Name == \\\\\\\"{Vendor}\\\\\\\"\\\\r\\\\n    | extend Detections_By_Step = Adversaries.Detections_By_Step\\\\r\\\\n    | extend Scenarios = bag_keys(Adversaries.Detections_By_Step)\\\\r\\\\n    | extend Protections = iff(isnotempty(Adversaries.Protections), 1, 0)\\\\r\\\\n    | extend ['Adversary Name'] = Adversaries.Adversary_Name\\\\r\\\\n    | project-away Adversaries, Detections_By_Step\\\\r\\\\n)\\\\r\\\\n| mv-expand Scenarios\\\\r\\\\n| extend Scenarios = tostring(Scenarios)\\\\r\\\\n| evaluate pivot(Scenarios)\\\\r\\\\n| project-reorder Participant_Name, ['Adversary Name'], ['Scenario_*'], Protections\\\\r\\\\n| join vendorNames on Participant_Name\\\\r\\\\n| extend link = strcat(\\\\\\\"https://attackevals.mitre-engenuity.org/enterprise/participants/\\\\\\\",shortName,\\\\\\\"/?adversary=\\\\\\\",['Adversary Name'])\\\\r\\\\n| project-away Participant_Name1, shortName, ['Adversary Name'];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nlet results = mitreeval\\\\r\\\\n| extend Adversaries = (todynamic(Aggregate_Data))['Evaluation_Aggregate_Data']['Adversaries']\\\\r\\\\n| mv-expand Adversaries\\\\r\\\\n| evaluate bag_unpack(Adversaries)\\\\r\\\\n| where Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n| project Participant_Name, \\\\r\\\\n    Display_Name, \\\\r\\\\n    ['Total Detections'] = Total_Detections, \\\\r\\\\n    ['Analytic Detections'] = Analytic_Detections, \\\\r\\\\n    Telemetry_Detections, \\\\r\\\\n    ['Analytic Coverage'] = split(Analytic_Coverage,\\\\\\\"/\\\\\\\")[0],\\\\r\\\\n    Analytic_NotCovered = toint(split(Analytic_Coverage,\\\\\\\"/\\\\\\\")[1])-toint(split(Analytic_Coverage,\\\\\\\"/\\\\\\\")[0]),\\\\r\\\\n    Telemetry_Coverage = split(Telemetry_Coverage,\\\\\\\"/\\\\\\\")[0], \\\\r\\\\n    Telemetry_NotCovered = toint(split(Telemetry_Coverage,\\\\\\\"/\\\\\\\")[1])-toint(split(Telemetry_Coverage,\\\\\\\"/\\\\\\\")[0]),\\\\r\\\\n    Visibility = split(Visibility,\\\\\\\"/\\\\\\\")[0],\\\\r\\\\n    Vis_NotCovered = toint(split(Visibility,\\\\\\\"/\\\\\\\")[1])-toint(split(Visibility,\\\\\\\"/\\\\\\\")[0])\\\\r\\\\n| sort by ['Total Detections'];\\\\r\\\\nresults | join testing on Participant_Name | project-away Participant_Name1\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":4,\"showRefreshButton\":true,\"queryType\":9,\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Participant_Name\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"{Vendor}\",\"representation\":\"blue\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Display_Name\",\"formatter\":5},{\"columnMatch\":\"Total Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Analytic Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"lightBlue\"}},{\"columnMatch\":\"Telemetry_Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"lightBlue\"}},{\"columnMatch\":\"Analytic Coverage\",\"formatter\":22,\"formatOptions\":{\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[{\"columnName\":\"Analytic Coverage\",\"color\":\"green\"},{\"columnName\":\"Analytic_NotCovered\",\"color\":\"red\"}]}}},{\"columnMatch\":\"Analytic_NotCovered\",\"formatter\":5},{\"columnMatch\":\"Telemetry_Coverage\",\"formatter\":22,\"formatOptions\":{\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[{\"columnName\":\"Telemetry_Coverage\",\"color\":\"green\"},{\"columnName\":\"Telemetry_NotCovered\",\"color\":\"red\"}]}}},{\"columnMatch\":\"Telemetry_NotCovered\",\"formatter\":5},{\"columnMatch\":\"Visibility\",\"formatter\":22,\"formatOptions\":{\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[{\"columnName\":\"Visibility\",\"color\":\"green\"},{\"columnName\":\"Vis_NotCovered\",\"color\":\"red\"}]}}},{\"columnMatch\":\"Vis_NotCovered\",\"formatter\":5},{\"columnMatch\":\"Scenario_1\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"success\",\"text\":\"Tested\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"2\",\"text\":\"Not Tested\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Blank\",\"text\":\"Test\"}]}},{\"columnMatch\":\"Scenario_2\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"success\",\"text\":\"Tested\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Protections\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"success\",\"text\":\"Tested\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"cancelled\",\"text\":\"Not Tested\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Blank\",\"text\":\"\"}],\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]}}},{\"columnMatch\":\"link\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Vendor Evaluation Link\"}},{\"columnMatch\":\"Total_Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]}}},{\"columnMatch\":\"Analytic_Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Linux_Participant\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"true\",\"representation\":\"success\",\"text\":\"True\"},{\"operator\":\"==\",\"thresholdValue\":\"false\",\"representation\":\"cancelled\",\"text\":\"False\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"{0}{1}\"}],\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]}}}],\"sortBy\":[{\"itemKey\":\"$gen_bar_Total Detections_2\",\"sortOrder\":2}],\"labelSettings\":[{\"columnId\":\"Participant_Name\"}]},\"sortBy\":[{\"itemKey\":\"$gen_bar_Total Detections_2\",\"sortOrder\":2}],\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Participant_Name\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Total_Detections\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"missedDetections\"},\"name\":\"Vendor Results\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nmitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"{Vendor}\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n)\\\\r\\\\n| mv-expand Scenarios = Adversaries['Detections_By_Step']\\\\r\\\\n| mv-apply Scenarios on (\\\\r\\\\n    extend Scenario = tostring(bag_keys(Scenarios)[0])\\\\r\\\\n    | extend Steps = Scenarios[Scenario]['Steps']\\\\r\\\\n)\\\\r\\\\n| project-away Adversaries, Scenarios\\\\r\\\\n| mv-expand Steps\\\\r\\\\n| evaluate bag_unpack(Steps)\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps)\\\\r\\\\n| evaluate bag_unpack(Tactic)\\\\r\\\\n| evaluate bag_unpack(Technique)\\\\r\\\\n| mv-apply Detections on (\\\\r\\\\n    extend Detection_Note = Detections.Detection_Note\\\\r\\\\n)\\\\r\\\\n| where Detection_Note has \\\\\\\"Minimum detection criteria was not met\\\\\\\"\\\\r\\\\n| project Step_Name\\\\r\\\\n| summarize count() by Step_Name\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"{Vendor} - Missed Detections by Step\",\"queryType\":9,\"visualization\":\"piechart\",\"chartSettings\":{\"showLegend\":true}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"missedDetections\"},\"name\":\"query - 17\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nmitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"{Vendor}\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n)\\\\r\\\\n| mv-expand Scenarios = Adversaries['Detections_By_Step']\\\\r\\\\n| mv-apply Scenarios on (\\\\r\\\\n    extend Scenario = tostring(bag_keys(Scenarios)[0])\\\\r\\\\n    | extend Steps = Scenarios[Scenario]['Steps']\\\\r\\\\n)\\\\r\\\\n| project-away Adversaries, Scenarios\\\\r\\\\n| mv-expand Steps\\\\r\\\\n| evaluate bag_unpack(Steps)\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps)\\\\r\\\\n| evaluate bag_unpack(Tactic)\\\\r\\\\n| evaluate bag_unpack(Technique)\\\\r\\\\n| mv-apply Detections on (\\\\r\\\\n    extend Detection_Note = Detections.Detection_Note\\\\r\\\\n)\\\\r\\\\n| where Detection_Note has \\\\\\\"Minimum detection criteria was not met\\\\\\\"\\\\r\\\\n| project Tactic_Name\\\\r\\\\n| summarize count() by Tactic_Name\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"Missed Detections by Tactic\",\"queryType\":9,\"visualization\":\"barchart\"},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"missedDetections\"},\"name\":\"query - 17 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nmitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"{Vendor}\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n)\\\\r\\\\n| mv-expand Scenarios = Adversaries['Detections_By_Step']\\\\r\\\\n| mv-apply Scenarios on (\\\\r\\\\n    extend Scenario = tostring(bag_keys(Scenarios)[0])\\\\r\\\\n    | extend Steps = Scenarios[Scenario]['Steps']\\\\r\\\\n)\\\\r\\\\n| project-away Adversaries, Scenarios\\\\r\\\\n| mv-expand Steps\\\\r\\\\n| evaluate bag_unpack(Steps)\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps)\\\\r\\\\n| evaluate bag_unpack(Tactic)\\\\r\\\\n| evaluate bag_unpack(Technique)\\\\r\\\\n| mv-apply Detections on (\\\\r\\\\n    extend Detection_Note = Detections.Detection_Note\\\\r\\\\n)\\\\r\\\\n| where Detection_Note has \\\\\\\"Minimum detection criteria was not met\\\\\\\"\\\\r\\\\n| extend ['Missed Detections'] = Detection_Note\\\\r\\\\n//| extend Scenario = split(Scenario,\\\\\\\"_\\\\\\\")[1]\\\\r\\\\n| project-away Procedure, Detection_Note, Subtechnique\\\\r\\\\n| project-reorder Participant_Name, ['Missed Detections'], Step_Name, Substep, Tactic_Name, Technique_Name, *\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":3,\"title\":\"Missed Detections - grouped by Scenario\",\"queryType\":9,\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Missed Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"aggregation\":\"Count\"}},{\"columnMatch\":\"Step_Name\",\"formatter\":5},{\"columnMatch\":\"Scenario\",\"formatter\":5,\"formatOptions\":{\"aggregation\":\"Min\"}},{\"columnMatch\":\"Step_Num\",\"formatter\":5}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"Scenario\",\"Step_Name\"],\"expandTopLevel\":false}},\"sortBy\":[]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"missedDetections\"},\"name\":\"Missed Detections - Grouped by Scenario\"},{\"type\":1,\"content\":{\"json\":\"## Missed Detections\\r\\n\\r\\nVendors use their own terminology and approaches to detect and protect potential adversary behavior. They provide this information to us in their unique way, and then it is our responsibility to abstract the data using categories to talk about the products in similar ways.\\r\\n\\r\\nThese categories are divided into two types: “Main” and “Modifier.” Each detection or protection receives one main category designation, which relates to the amount of context provided to the user, and may optionally receive one or more modifier category designations that help describe the event in more detail. For the Carbanak+FIN7 evaluation, there are six main detection categories representing the amount of context provided to the analyst, and three main protection categories.\\r\\n\\r\\nYou can learn about Detection Categories on Mitre's website\\r\\n[Detection Categories](https://attackevals.mitre-engenuity.org/enterprise/carbanak_fin7/detection-categories.html)\",\"style\":\"info\"},\"name\":\"text - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nmitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"{Vendor}\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n| join kind=leftouter vendorNames on Participant_Name\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n)\\\\r\\\\n| mv-expand Scenarios = Adversaries['Detections_By_Step']\\\\r\\\\n| mv-apply Scenarios on (\\\\r\\\\n    extend Scenario = tostring(bag_keys(Scenarios)[0])\\\\r\\\\n    | extend Steps = Scenarios[Scenario]['Steps']\\\\r\\\\n)\\\\r\\\\n| project-away Scenarios, Participant_Name1\\\\r\\\\n| mv-expand Steps\\\\r\\\\n| evaluate bag_unpack(Steps)\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps)\\\\r\\\\n| evaluate bag_unpack(Tactic)\\\\r\\\\n| evaluate bag_unpack(Technique)\\\\r\\\\n| mv-apply Detections on (\\\\r\\\\n    extend Detection_Note = Detections.Detection_Note\\\\r\\\\n)\\\\r\\\\n| where Detection_Note has \\\\\\\"Minimum detection criteria was not met\\\\\\\"\\\\r\\\\n| evaluate bag_unpack(Subtechnique)\\\\r\\\\n| project-away Procedure, Participant_Name, Detections\\\\r\\\\n//| extend Scenario = split(Scenario,\\\\\\\"_\\\\\\\")[1]\\\\r\\\\n| extend tacticLink = strcat(\\\\\\\"https://attack.mitre.org/tactics/\\\\\\\",Tactic_Id)\\\\r\\\\n| extend techniqueLink = strcat(\\\\\\\"https://attack.mitre.org/techniques/\\\\\\\",Technique_Id)\\\\r\\\\n| extend scenariolink = strcat(\\\\\\\"https://attackevals.mitre-engenuity.org/enterprise/participants/\\\\\\\",shortName,\\\\\\\"/results.html?adversary=\\\\\\\",Adversaries.Adversary_Name,\\\\\\\"&scenario=\\\\\\\",split(Scenario,\\\\\\\"_\\\\\\\")[1])\\\\r\\\\n| extend subtlink = strcat(\\\\\\\"https://attack.mitre.org/techniques/\\\\\\\",split(Subtechnique_Id,\\\\\\\".\\\\\\\")[0],\\\\\\\"/\\\\\\\",split(Subtechnique_Id,\\\\\\\".\\\\\\\")[1])\\\\r\\\\n| project-reorder Scenario, Step_Num, Step_Name, Substep, Tactic_Id, tacticLink, Tactic_Name, Technique_Id, Technique_Name, techniqueLink, Detection_Note, *\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"Missed Detections during Scenarios\",\"queryType\":9,\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Scenario\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"scenariolink\",\"linkTarget\":\"Url\",\"linkIsContextBlade\":false,\"aggregation\":\"Min\"}},{\"columnMatch\":\"Tactic_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"tacticLink\",\"linkTarget\":\"Url\",\"linkLabel\":\"\"}},{\"columnMatch\":\"tacticLink\",\"formatter\":5,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Goto Tactic\"}},{\"columnMatch\":\"Tactic_Name\",\"formatter\":1},{\"columnMatch\":\"Technique_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"techniqueLink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Technique_Name\",\"formatter\":1},{\"columnMatch\":\"techniqueLink\",\"formatter\":5},{\"columnMatch\":\"Detection_Note\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"Minimum detection criteria was not met for this procedure.\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"shortName\",\"formatter\":5},{\"columnMatch\":\"Subtechnique_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"subtlink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"scenariolink\",\"formatter\":5},{\"columnMatch\":\"subtlink\",\"formatter\":5},{\"columnMatch\":\"Missed Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"aggregation\":\"Count\"}}],\"filter\":true,\"sortBy\":[{\"itemKey\":\"Step_Num\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"Step_Num\",\"sortOrder\":1}]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"missedDetections\"},\"name\":\"Minimum detection criteria was not met for the following tactic/techniques - Copy\"},{\"type\":1,\"content\":{\"json\":\"## Protection Test Results\\r\\n\\r\\nVendors use their own terminology and approaches to protect potential adversary behavior. \\r\\n\\r\\nProtection categories will be used to clearly identify whether or not a protection was encountered in the adversary emulation, and whether a user prompt was required to confirm the blocking activity. Categories are subject to change, based on lessons learned from the evaluation.\\r\\n\\r\\nYou can learn more about our process for processing detections on mitres website.\\r\\n[Protection Categories](https://attackevals.mitre-engenuity.org/enterprise/carbanak_fin7/protection-categories.html)\",\"style\":\"info\"},\"name\":\"text - 7\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nlet Protections = mitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"{Vendor}\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n    | extend Protections = iff(isnotempty(Adversaries.Protections), 1, 0)\\\\r\\\\n    | extend Protection_Steps = Adversaries.Protections.Protection_Tests\\\\r\\\\n    | extend ['Adversary Name'] = Adversaries.Adversary_Name\\\\r\\\\n)\\\\r\\\\n| mv-expand Protection_Steps | evaluate bag_unpack(Protection_Steps)\\\\r\\\\n|  extend\\\\r\\\\n    Substeps = column_ifexists(\\\\\\\"Substeps\\\\\\\", todynamic(\\\\\\\"[]\\\\\\\")), \\\\r\\\\n    Test_Num = column_ifexists(\\\\\\\"Test_Num\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Protection_Type = column_ifexists(\\\\\\\"Protection_Type\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Protection_Note = column_ifexists(\\\\\\\"Protection_Note\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Tactic = column_ifexists(\\\\\\\"Tactic\\\\\\\", todynamic(\\\\\\\"[]\\\\\\\")), \\\\r\\\\n    Technique = column_ifexists(\\\\\\\"Technique\\\\\\\", todynamic(\\\\\\\"[]\\\\\\\"))\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps, columnsConflict='replace_source')\\\\r\\\\n| evaluate bag_unpack (Tactic, columnsConflict='replace_source')\\\\r\\\\n| evaluate bag_unpack (Technique, columnsConflict='replace_source')\\\\r\\\\n| extend \\\\r\\\\n    Tactic_Id = column_ifexists(\\\\\\\"Tactic_Id\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Tactic_Name = column_ifexists(\\\\\\\"Tactic_Name\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Technique_Id = column_ifexists(\\\\\\\"Technique_Id\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Technique_Name = column_ifexists(\\\\\\\"Technique_Name\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Test_Name = column_ifexists(\\\\\\\"Test_Name\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Test_Group = column_ifexists(\\\\\\\"Test_Group\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Criteria = column_ifexists(\\\\\\\"Criteria\\\\\\\", \\\\\\\"\\\\\\\");\\\\r\\\\n// Builds table of blocked as well as labeling tests that executed successfully\\\\r\\\\nlet blocked = Protections\\\\r\\\\n| summarize by Participant_Name, Test_Num\\\\r\\\\n| join kind=leftouter (Protections | where Protection_Type == \\\\\\\"Blocked\\\\\\\" or Protection_Note has \\\\\\\"Test was not successfully executed\\\\\\\") on Test_Num\\\\r\\\\n| project-away Participant_Name1\\\\r\\\\n| project Test_Num, Result = iff(isnotempty(Protection_Note), Protection_Note, \\\\\\\"All techniques for this test case were executed.\\\\\\\");\\\\r\\\\nProtections\\\\r\\\\n| join blocked on Test_Num\\\\r\\\\n| join kind=leftouter vendorNames on Participant_Name\\\\r\\\\n| extend tacticLink = strcat(\\\\\\\"https://attack.mitre.org/tactics/\\\\\\\",Tactic_Id)\\\\r\\\\n| extend techniqueLink = strcat(\\\\\\\"https://attack.mitre.org/techniques/\\\\\\\",Technique_Id)\\\\r\\\\n| extend evaluationLink = strcat(\\\\\\\"https://attackevals.mitre-engenuity.org/enterprise/participants/\\\\\\\",shortName,\\\\\\\"/results.html?adversary=carbanak_fin7&scenario=protections\\\\\\\")\\\\r\\\\n| project Test_Group, Test_Num, Result, Test_Name, Tactic_Id, Tactic_Name, Technique_Id, Technique_Name, Criteria, tacticLink, techniqueLink, evaluationLink\\\\r\\\\n| sort by Test_Num asc\\\\r\\\\n//| project-away Protections, Participant_Name, Adversaries, ['Adversary Name'], Test_Description, Test_Screenshots, Footnotes, Protection_Note, Protection_Type, Screenshots, Subtechnique\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"{Vendor} - Protection Evaluation Results\",\"noDataMessage\":\"No Protections Testing Results could be obtained\",\"noDataMessageStyle\":4,\"queryType\":9,\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Test_Group\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"evaluationLink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Tactic_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"tacticLink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Technique_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"techniqueLink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Result\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"All techniques for this test case were executed\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"contains\",\"thresholdValue\":\"was blocked\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"tacticLink\",\"formatter\":5},{\"columnMatch\":\"techniqueLink\",\"formatter\":5},{\"columnMatch\":\"evaluationLink\",\"formatter\":5}],\"filter\":true}},\"name\":\"Vendor Protection Evaluation Results\"}]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"missedDetections\"},\"name\":\"Missed Detections\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nlet Protections = mitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"Cisco\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Adversary_Name == \\\\\\\"carbanak_fin7\\\\\\\"\\\\r\\\\n    | extend Protections = iff(isnotempty(Adversaries.Protections), 1, 0)\\\\r\\\\n    | extend Protection_Steps = Adversaries.Protections.Protection_Tests\\\\r\\\\n    | extend ['Adversary Name'] = Adversaries.Adversary_Name\\\\r\\\\n)\\\\r\\\\n| mv-expand Protection_Steps | evaluate bag_unpack(Protection_Steps)\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps);\\\\r\\\\nlet blocked = Protections\\\\r\\\\n| distinct Test_Num\\\\r\\\\n| join kind=leftouter (Protections | where Protection_Type == \\\\\\\"Blocked\\\\\\\") on Test_Num\\\\r\\\\n| project Test_Num, Result = iff(Protection_Type ==\\\\\\\"Blocked\\\\\\\", \\\\\\\"Blocked\\\\\\\", \\\\\\\"Techniques Executed successfully\\\\\\\");\\\\r\\\\nProtections \\\\r\\\\n| join kind=leftouter blocked on Test_Num\\\\r\\\\n| where Result != \\\\\\\"Blocked\\\\\\\"\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"queryType\":9},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"protectionResults\"},\"name\":\"query - 15\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Participant Comparison Tool\\r\\n\\r\\nYou can use this to help compare how Participants compare\",\"style\":\"info\"},\"name\":\"text - 10 - Copy\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"ca279df6-27fd-454c-a5b3-a417590f3bf5\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Participant_1\",\"type\":2,\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"mitreeval\\\\r\\\\n| distinct Participant_Name\\\\r\\\\n| sort by Participant_Name asc\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"value\":\"Bitdefender\",\"typeSettings\":{\"additionalResourceOptions\":[]},\"timeContext\":{\"durationMs\":86400000},\"queryType\":9},{\"id\":\"7203ea48-477f-4b1f-8c57-d0a3a523cad9\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Participant_2\",\"type\":2,\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"mitreeval\\\\r\\\\n| distinct Participant_Name\\\\r\\\\n| sort by Participant_Name asc\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"value\":\"Palo Alto Networks\",\"typeSettings\":{\"additionalResourceOptions\":[]},\"timeContext\":{\"durationMs\":86400000},\"queryType\":9}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\nlet testing = mitreeval\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n    | where Participant_Name in (\\\\\\\"{Participant_1}\\\\\\\",\\\\\\\"{Participant_2}\\\\\\\")\\\\r\\\\n    | extend Detections_By_Step = Adversaries.Detections_By_Step\\\\r\\\\n    | extend Scenarios = bag_keys(Adversaries.Detections_By_Step)\\\\r\\\\n    | extend Protections = iff(isnotempty(Adversaries.Protections), 1, 0)\\\\r\\\\n    | extend ['Adversary Name'] = Adversaries.Adversary_Name\\\\r\\\\n    | project-away Adversaries, Detections_By_Step\\\\r\\\\n)\\\\r\\\\n| mv-expand Scenarios\\\\r\\\\n| extend Scenarios = tostring(Scenarios)\\\\r\\\\n| evaluate pivot(Scenarios)\\\\r\\\\n| project-reorder Participant_Name, ['Adversary Name'], ['Scenario_*'], Protections\\\\r\\\\n| join vendorNames on Participant_Name\\\\r\\\\n| extend link = strcat(\\\\\\\"https://attackevals.mitre-engenuity.org/enterprise/participants/\\\\\\\",shortName,\\\\\\\"/?adversary=\\\\\\\",['Adversary Name'])\\\\r\\\\n| project-away Participant_Name1, shortName, ['Adversary Name'];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nlet results = mitreeval\\\\r\\\\n| extend Adversaries = (todynamic(Aggregate_Data))['Evaluation_Aggregate_Data']['Adversaries']\\\\r\\\\n| mv-expand Adversaries\\\\r\\\\n| evaluate bag_unpack(Adversaries)\\\\r\\\\n| where Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n| project Participant_Name, \\\\r\\\\n    Display_Name, \\\\r\\\\n    ['Total Detections'] = Total_Detections, \\\\r\\\\n    ['Analytic Detections'] = Analytic_Detections, \\\\r\\\\n    Telemetry_Detections, \\\\r\\\\n    ['Analytic Coverage'] = split(Analytic_Coverage,\\\\\\\"/\\\\\\\")[0],\\\\r\\\\n    Analytic_NotCovered = toint(split(Analytic_Coverage,\\\\\\\"/\\\\\\\")[1])-toint(split(Analytic_Coverage,\\\\\\\"/\\\\\\\")[0]),\\\\r\\\\n    Telemetry_Coverage = split(Telemetry_Coverage,\\\\\\\"/\\\\\\\")[0], \\\\r\\\\n    Telemetry_NotCovered = toint(split(Telemetry_Coverage,\\\\\\\"/\\\\\\\")[1])-toint(split(Telemetry_Coverage,\\\\\\\"/\\\\\\\")[0]),\\\\r\\\\n    Visibility = split(Visibility,\\\\\\\"/\\\\\\\")[0],\\\\r\\\\n    Vis_NotCovered = toint(split(Visibility,\\\\\\\"/\\\\\\\")[1])-toint(split(Visibility,\\\\\\\"/\\\\\\\")[0])\\\\r\\\\n| sort by ['Total Detections'];\\\\r\\\\nresults | join testing on Participant_Name | project-away Participant_Name1\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":4,\"title\":\"Evaluation of {Evaluation} with Participants {Participant_1}/{Participant_2}\",\"noDataMessage\":\"No vendors selected to compare\",\"noDataMessageStyle\":4,\"showRefreshButton\":true,\"queryType\":9,\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Participant_Name\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"{Vendor}\",\"representation\":\"blue\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Display_Name\",\"formatter\":5},{\"columnMatch\":\"Total Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Analytic Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"lightBlue\"}},{\"columnMatch\":\"Telemetry_Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"lightBlue\"}},{\"columnMatch\":\"Analytic Coverage\",\"formatter\":22,\"formatOptions\":{\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[{\"columnName\":\"Analytic Coverage\",\"color\":\"green\"},{\"columnName\":\"Analytic_NotCovered\",\"color\":\"red\"}]}}},{\"columnMatch\":\"Analytic_NotCovered\",\"formatter\":5},{\"columnMatch\":\"Telemetry_Coverage\",\"formatter\":22,\"formatOptions\":{\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[{\"columnName\":\"Telemetry_Coverage\",\"color\":\"green\"},{\"columnName\":\"Telemetry_NotCovered\",\"color\":\"red\"}]}}},{\"columnMatch\":\"Telemetry_NotCovered\",\"formatter\":5},{\"columnMatch\":\"Visibility\",\"formatter\":22,\"formatOptions\":{\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[{\"columnName\":\"Visibility\",\"color\":\"green\"},{\"columnName\":\"Vis_NotCovered\",\"color\":\"red\"}]}}},{\"columnMatch\":\"Vis_NotCovered\",\"formatter\":5},{\"columnMatch\":\"Scenario_1\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"success\",\"text\":\"Tested\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"2\",\"text\":\"Not Tested\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Blank\",\"text\":\"Test\"}]}},{\"columnMatch\":\"Scenario_2\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"success\",\"text\":\"Tested\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Protections\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"success\",\"text\":\"Tested\"},{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"cancelled\",\"text\":\"Not Tested\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Blank\",\"text\":\"\"}],\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]}}},{\"columnMatch\":\"link\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Vendor Evaluation Link\"}},{\"columnMatch\":\"Total_Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]}}},{\"columnMatch\":\"Analytic_Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Linux_Participant\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"true\",\"representation\":\"success\",\"text\":\"True\"},{\"operator\":\"==\",\"thresholdValue\":\"false\",\"representation\":\"cancelled\",\"text\":\"False\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"{0}{1}\"}],\"compositeBarSettings\":{\"labelText\":\"\",\"columnSettings\":[]}}}],\"sortBy\":[{\"itemKey\":\"$gen_bar_Total Detections_2\",\"sortOrder\":2}],\"labelSettings\":[{\"columnId\":\"Participant_Name\"}]},\"sortBy\":[{\"itemKey\":\"$gen_bar_Total Detections_2\",\"sortOrder\":2}],\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"Participant_Name\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Total_Detections\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isNotEqualTo\",\"value\":\"overview\"},\"name\":\"Comparison Tool - Overall  Vendor Results\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nmitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"{Participant_1}\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n)\\\\r\\\\n| mv-expand Scenarios = Adversaries['Detections_By_Step']\\\\r\\\\n| mv-apply Scenarios on (\\\\r\\\\n    extend Scenario = tostring(bag_keys(Scenarios)[0])\\\\r\\\\n    | extend Steps = Scenarios[Scenario]['Steps']\\\\r\\\\n)\\\\r\\\\n| project-away Adversaries, Scenarios\\\\r\\\\n| mv-expand Steps\\\\r\\\\n| evaluate bag_unpack(Steps)\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps)\\\\r\\\\n| evaluate bag_unpack(Tactic)\\\\r\\\\n| evaluate bag_unpack(Technique)\\\\r\\\\n| mv-apply Detections on (\\\\r\\\\n    extend Detection_Note = Detections.Detection_Note\\\\r\\\\n)\\\\r\\\\n| where Detection_Note has \\\\\\\"Minimum detection criteria was not met\\\\\\\"\\\\r\\\\n| project Step_Name\\\\r\\\\n| summarize count() by Step_Name\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"{Participant_1} - {Evaluation} - Missed Detections by Step\",\"queryType\":9,\"visualization\":\"piechart\",\"chartSettings\":{\"showLegend\":true}},\"customWidth\":\"50\",\"name\":\"Participant 1 - Missed Detection\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nmitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"{Participant_2}\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n)\\\\r\\\\n| mv-expand Scenarios = Adversaries['Detections_By_Step']\\\\r\\\\n| mv-apply Scenarios on (\\\\r\\\\n    extend Scenario = tostring(bag_keys(Scenarios)[0])\\\\r\\\\n    | extend Steps = Scenarios[Scenario]['Steps']\\\\r\\\\n)\\\\r\\\\n| project-away Adversaries, Scenarios\\\\r\\\\n| mv-expand Steps\\\\r\\\\n| evaluate bag_unpack(Steps)\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps)\\\\r\\\\n| evaluate bag_unpack(Tactic)\\\\r\\\\n| evaluate bag_unpack(Technique)\\\\r\\\\n| mv-apply Detections on (\\\\r\\\\n    extend Detection_Note = Detections.Detection_Note\\\\r\\\\n)\\\\r\\\\n| where Detection_Note has \\\\\\\"Minimum detection criteria was not met\\\\\\\"\\\\r\\\\n| project Step_Name\\\\r\\\\n| summarize count() by Step_Name\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"{Participant_2} - {Evaluation} - Missed Detections by Step\",\"queryType\":9,\"visualization\":\"piechart\",\"chartSettings\":{\"showLegend\":true}},\"customWidth\":\"50\",\"name\":\"query - 17 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nmitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"{Participant_1}\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n)\\\\r\\\\n| mv-expand Scenarios = Adversaries['Detections_By_Step']\\\\r\\\\n| mv-apply Scenarios on (\\\\r\\\\n    extend Scenario = tostring(bag_keys(Scenarios)[0])\\\\r\\\\n    | extend Steps = Scenarios[Scenario]['Steps']\\\\r\\\\n)\\\\r\\\\n| project-away Adversaries, Scenarios\\\\r\\\\n| mv-expand Steps\\\\r\\\\n| evaluate bag_unpack(Steps)\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps)\\\\r\\\\n| evaluate bag_unpack(Tactic)\\\\r\\\\n| evaluate bag_unpack(Technique)\\\\r\\\\n| mv-apply Detections on (\\\\r\\\\n    extend Detection_Note = Detections.Detection_Note\\\\r\\\\n)\\\\r\\\\n| where Detection_Note has \\\\\\\"Minimum detection criteria was not met\\\\\\\"\\\\r\\\\n| project Tactic_Name\\\\r\\\\n| summarize count() by Tactic_Name\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"{Participant_1} - {Evaluation} - Missed Detections by Tactic\",\"queryType\":9,\"visualization\":\"barchart\"},\"customWidth\":\"50\",\"name\":\"query - 17 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nmitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"{Participant_2}\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n)\\\\r\\\\n| mv-expand Scenarios = Adversaries['Detections_By_Step']\\\\r\\\\n| mv-apply Scenarios on (\\\\r\\\\n    extend Scenario = tostring(bag_keys(Scenarios)[0])\\\\r\\\\n    | extend Steps = Scenarios[Scenario]['Steps']\\\\r\\\\n)\\\\r\\\\n| project-away Adversaries, Scenarios\\\\r\\\\n| mv-expand Steps\\\\r\\\\n| evaluate bag_unpack(Steps)\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps)\\\\r\\\\n| evaluate bag_unpack(Tactic)\\\\r\\\\n| evaluate bag_unpack(Technique)\\\\r\\\\n| mv-apply Detections on (\\\\r\\\\n    extend Detection_Note = Detections.Detection_Note\\\\r\\\\n)\\\\r\\\\n| where Detection_Note has \\\\\\\"Minimum detection criteria was not met\\\\\\\"\\\\r\\\\n| project Tactic_Name\\\\r\\\\n| summarize count() by Tactic_Name\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"{Participant_2} - Missed Detections by Tactic\",\"queryType\":9,\"visualization\":\"barchart\"},\"customWidth\":\"50\",\"name\":\"query - 17 - Copy - Copy - Copy\"},{\"type\":1,\"content\":{\"json\":\"## Missed Detections\\r\\n\\r\\nVendors use their own terminology and approaches to detect and protect potential adversary behavior. They provide this information to us in their unique way, and then it is our responsibility to abstract the data using categories to talk about the products in similar ways.\\r\\n\\r\\nThese categories are divided into two types: “Main” and “Modifier.” Each detection or protection receives one main category designation, which relates to the amount of context provided to the user, and may optionally receive one or more modifier category designations that help describe the event in more detail. For the Carbanak+FIN7 evaluation, there are six main detection categories representing the amount of context provided to the analyst, and three main protection categories.\\r\\n\\r\\nYou can learn about Detection Categories on Mitre's website\\r\\n[Detection Categories](https://attackevals.mitre-engenuity.org/enterprise/carbanak_fin7/detection-categories.html)\",\"style\":\"info\"},\"name\":\"text - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nmitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"{Participant_1}\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n| join kind=leftouter vendorNames on Participant_Name\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n)\\\\r\\\\n| mv-expand Scenarios = Adversaries['Detections_By_Step']\\\\r\\\\n| mv-apply Scenarios on (\\\\r\\\\n    extend Scenario = tostring(bag_keys(Scenarios)[0])\\\\r\\\\n    | extend Steps = Scenarios[Scenario]['Steps']\\\\r\\\\n)\\\\r\\\\n| project-away Scenarios, Participant_Name1\\\\r\\\\n| mv-expand Steps\\\\r\\\\n| evaluate bag_unpack(Steps)\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps)\\\\r\\\\n| evaluate bag_unpack(Tactic)\\\\r\\\\n| evaluate bag_unpack(Technique)\\\\r\\\\n| mv-apply Detections on (\\\\r\\\\n    extend Detection_Note = Detections.Detection_Note\\\\r\\\\n)\\\\r\\\\n| where Detection_Note has \\\\\\\"Minimum detection criteria was not met\\\\\\\"\\\\r\\\\n| evaluate bag_unpack(Subtechnique)\\\\r\\\\n| project-away Procedure, Participant_Name, Detections\\\\r\\\\n//| extend Scenario = split(Scenario,\\\\\\\"_\\\\\\\")[1]\\\\r\\\\n| extend tacticLink = strcat(\\\\\\\"https://attack.mitre.org/tactics/\\\\\\\",Tactic_Id)\\\\r\\\\n| extend techniqueLink = strcat(\\\\\\\"https://attack.mitre.org/techniques/\\\\\\\",Technique_Id)\\\\r\\\\n| extend scenariolink = strcat(\\\\\\\"https://attackevals.mitre-engenuity.org/enterprise/participants/\\\\\\\",shortName,\\\\\\\"/results.html?adversary=\\\\\\\",Adversaries.Adversary_Name,\\\\\\\"&scenario=\\\\\\\",split(Scenario,\\\\\\\"_\\\\\\\")[1])\\\\r\\\\n| extend subtlink = strcat(\\\\\\\"https://attack.mitre.org/techniques/\\\\\\\",split(Subtechnique_Id,\\\\\\\".\\\\\\\")[0],\\\\\\\"/\\\\\\\",split(Subtechnique_Id,\\\\\\\".\\\\\\\")[1])\\\\r\\\\n| project-reorder Scenario, Step_Num, Step_Name, Substep, Tactic_Id, tacticLink, Tactic_Name, Technique_Id, Technique_Name, techniqueLink, Detection_Note, *\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"{Participant_1} - {Evaluation} - Missed Detections during Scenarios\",\"queryType\":9,\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Scenario\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"scenariolink\",\"linkTarget\":\"Url\",\"linkIsContextBlade\":false,\"aggregation\":\"Min\"}},{\"columnMatch\":\"Tactic_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"tacticLink\",\"linkTarget\":\"Url\",\"linkLabel\":\"\"}},{\"columnMatch\":\"tacticLink\",\"formatter\":5,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Goto Tactic\"}},{\"columnMatch\":\"Tactic_Name\",\"formatter\":1},{\"columnMatch\":\"Technique_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"techniqueLink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Technique_Name\",\"formatter\":1},{\"columnMatch\":\"techniqueLink\",\"formatter\":5},{\"columnMatch\":\"Detection_Note\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"Minimum detection criteria was not met for this procedure.\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"shortName\",\"formatter\":5},{\"columnMatch\":\"Subtechnique_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"subtlink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"scenariolink\",\"formatter\":5},{\"columnMatch\":\"subtlink\",\"formatter\":5},{\"columnMatch\":\"Missed Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"aggregation\":\"Count\"}}],\"filter\":true,\"sortBy\":[{\"itemKey\":\"Step_Num\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"Step_Num\",\"sortOrder\":1}]},\"customWidth\":\"50\",\"name\":\"Minimum detection criteria was not met for the following tactic/techniques - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nmitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"{Participant_2}\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n| join kind=leftouter vendorNames on Participant_Name\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n)\\\\r\\\\n| mv-expand Scenarios = Adversaries['Detections_By_Step']\\\\r\\\\n| mv-apply Scenarios on (\\\\r\\\\n    extend Scenario = tostring(bag_keys(Scenarios)[0])\\\\r\\\\n    | extend Steps = Scenarios[Scenario]['Steps']\\\\r\\\\n)\\\\r\\\\n| project-away Scenarios, Participant_Name1\\\\r\\\\n| mv-expand Steps\\\\r\\\\n| evaluate bag_unpack(Steps)\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps)\\\\r\\\\n| evaluate bag_unpack(Tactic)\\\\r\\\\n| evaluate bag_unpack(Technique)\\\\r\\\\n| mv-apply Detections on (\\\\r\\\\n    extend Detection_Note = Detections.Detection_Note\\\\r\\\\n)\\\\r\\\\n| where Detection_Note has \\\\\\\"Minimum detection criteria was not met\\\\\\\"\\\\r\\\\n| evaluate bag_unpack(Subtechnique)\\\\r\\\\n| project-away Procedure, Participant_Name, Detections\\\\r\\\\n//| extend Scenario = split(Scenario,\\\\\\\"_\\\\\\\")[1]\\\\r\\\\n| extend tacticLink = strcat(\\\\\\\"https://attack.mitre.org/tactics/\\\\\\\",Tactic_Id)\\\\r\\\\n| extend techniqueLink = strcat(\\\\\\\"https://attack.mitre.org/techniques/\\\\\\\",Technique_Id)\\\\r\\\\n| extend scenariolink = strcat(\\\\\\\"https://attackevals.mitre-engenuity.org/enterprise/participants/\\\\\\\",shortName,\\\\\\\"/results.html?adversary=\\\\\\\",Adversaries.Adversary_Name,\\\\\\\"&scenario=\\\\\\\",split(Scenario,\\\\\\\"_\\\\\\\")[1])\\\\r\\\\n| extend subtlink = strcat(\\\\\\\"https://attack.mitre.org/techniques/\\\\\\\",split(Subtechnique_Id,\\\\\\\".\\\\\\\")[0],\\\\\\\"/\\\\\\\",split(Subtechnique_Id,\\\\\\\".\\\\\\\")[1])\\\\r\\\\n| project-reorder Scenario, Step_Num, Step_Name, Substep, Tactic_Id, tacticLink, Tactic_Name, Technique_Id, Technique_Name, techniqueLink, Detection_Note, *\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"{Participant_2} - {Evaluation} - Missed Detections during Scenarios\",\"queryType\":9,\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Scenario\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"scenariolink\",\"linkTarget\":\"Url\",\"linkIsContextBlade\":false,\"aggregation\":\"Min\"}},{\"columnMatch\":\"Tactic_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"tacticLink\",\"linkTarget\":\"Url\",\"linkLabel\":\"\"}},{\"columnMatch\":\"tacticLink\",\"formatter\":5,\"formatOptions\":{\"linkTarget\":\"Url\",\"linkLabel\":\"Goto Tactic\"}},{\"columnMatch\":\"Tactic_Name\",\"formatter\":1},{\"columnMatch\":\"Technique_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"techniqueLink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Technique_Name\",\"formatter\":1},{\"columnMatch\":\"techniqueLink\",\"formatter\":5},{\"columnMatch\":\"Detection_Note\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"Minimum detection criteria was not met for this procedure.\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"shortName\",\"formatter\":5},{\"columnMatch\":\"Subtechnique_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"subtlink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"scenariolink\",\"formatter\":5},{\"columnMatch\":\"subtlink\",\"formatter\":5},{\"columnMatch\":\"Missed Detections\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"aggregation\":\"Count\"}}],\"filter\":true,\"sortBy\":[{\"itemKey\":\"Step_Num\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"Step_Num\",\"sortOrder\":1}]},\"customWidth\":\"50\",\"name\":\"Minimum detection criteria was not met for the following tactic/techniques - Copy - Copy - Copy\"},{\"type\":1,\"content\":{\"json\":\"## Protection Test Results\\r\\n\\r\\nVendors use their own terminology and approaches to protect potential adversary behavior. \\r\\n\\r\\nProtection categories will be used to clearly identify whether or not a protection was encountered in the adversary emulation, and whether a user prompt was required to confirm the blocking activity. Categories are subject to change, based on lessons learned from the evaluation.\\r\\n\\r\\nYou can learn more about our process for processing detections on mitres website.\\r\\n[Protection Categories](https://attackevals.mitre-engenuity.org/enterprise/carbanak_fin7/protection-categories.html)\",\"style\":\"info\"},\"name\":\"text - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nlet Protections = mitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"{Participant_1}\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n    | extend Protections = iff(isnotempty(Adversaries.Protections), 1, 0)\\\\r\\\\n    | extend Protection_Steps = Adversaries.Protections.Protection_Tests\\\\r\\\\n    | extend ['Adversary Name'] = Adversaries.Adversary_Name\\\\r\\\\n)\\\\r\\\\n| mv-expand Protection_Steps | evaluate bag_unpack(Protection_Steps)\\\\r\\\\n|  extend\\\\r\\\\n    Substeps = column_ifexists(\\\\\\\"Substeps\\\\\\\", todynamic(\\\\\\\"[]\\\\\\\")), \\\\r\\\\n    Test_Num = column_ifexists(\\\\\\\"Test_Num\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Protection_Type = column_ifexists(\\\\\\\"Protection_Type\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Protection_Note = column_ifexists(\\\\\\\"Protection_Note\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Tactic = column_ifexists(\\\\\\\"Tactic\\\\\\\", todynamic(\\\\\\\"[]\\\\\\\")), \\\\r\\\\n    Technique = column_ifexists(\\\\\\\"Technique\\\\\\\", todynamic(\\\\\\\"[]\\\\\\\"))\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps, columnsConflict='replace_source')\\\\r\\\\n| evaluate bag_unpack (Tactic, columnsConflict='replace_source')\\\\r\\\\n| evaluate bag_unpack (Technique, columnsConflict='replace_source')\\\\r\\\\n| extend \\\\r\\\\n    Tactic_Id = column_ifexists(\\\\\\\"Tactic_Id\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Tactic_Name = column_ifexists(\\\\\\\"Tactic_Name\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Technique_Id = column_ifexists(\\\\\\\"Technique_Id\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Technique_Name = column_ifexists(\\\\\\\"Technique_Name\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Test_Name = column_ifexists(\\\\\\\"Test_Name\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Test_Group = column_ifexists(\\\\\\\"Test_Group\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Criteria = column_ifexists(\\\\\\\"Criteria\\\\\\\", \\\\\\\"\\\\\\\");\\\\r\\\\n// Builds table of blocked as well as labeling tests that executed successfully\\\\r\\\\nlet blocked = Protections\\\\r\\\\n| summarize by Participant_Name, Test_Num\\\\r\\\\n| join kind=leftouter (Protections | where Protection_Type == \\\\\\\"Blocked\\\\\\\" or Protection_Note has \\\\\\\"Test was not successfully executed\\\\\\\") on Test_Num\\\\r\\\\n| project-away Participant_Name1\\\\r\\\\n| project Test_Num, Result = iff(isnotempty(Protection_Note), Protection_Note, \\\\\\\"All techniques for this test case were executed.\\\\\\\");\\\\r\\\\nProtections\\\\r\\\\n| join blocked on Test_Num\\\\r\\\\n| join kind=leftouter vendorNames on Participant_Name\\\\r\\\\n| extend tacticLink = strcat(\\\\\\\"https://attack.mitre.org/tactics/\\\\\\\",Tactic_Id)\\\\r\\\\n| extend techniqueLink = strcat(\\\\\\\"https://attack.mitre.org/techniques/\\\\\\\",Technique_Id)\\\\r\\\\n| extend evaluationLink = strcat(\\\\\\\"https://attackevals.mitre-engenuity.org/enterprise/participants/\\\\\\\",shortName,\\\\\\\"/results.html?adversary=carbanak_fin7&scenario=protections\\\\\\\")\\\\r\\\\n| project Test_Group,  Test_Num, Result,Test_Name, Tactic_Id, Tactic_Name, Technique_Id, Technique_Name, Criteria, tacticLink, techniqueLink, evaluationLink\\\\r\\\\n| sort by Test_Num asc\\\\r\\\\n//| project-away Protections, Participant_Name, Adversaries, ['Adversary Name'], Test_Description, Test_Screenshots, Footnotes, Protection_Note, Protection_Type, Screenshots, Subtechnique\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"{Participant_1} - {Evaluation} - Protection Evaluation Results\",\"noDataMessage\":\"No Protections Testing Results could be obtained. \",\"noDataMessageStyle\":4,\"queryType\":9,\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Test_Group\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"evaluationLink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Tactic_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"tacticLink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Technique_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"techniqueLink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Result\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"All techniques for this test case were executed\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"contains\",\"thresholdValue\":\"was blocked\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"tacticLink\",\"formatter\":5},{\"columnMatch\":\"techniqueLink\",\"formatter\":5},{\"columnMatch\":\"evaluationLink\",\"formatter\":5}],\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 7 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"{\\\"version\\\":\\\"AzureDataExplorerQuery/1.0\\\",\\\"queryText\\\":\\\"let vendorNames = datatable (Participant_Name:string, shortName:string)\\\\r\\\\n[\\\\r\\\\n    \\\\\\\"AhnLab\\\\\\\", \\\\\\\"ahnlab\\\\\\\",\\\\r\\\\n    \\\\\\\"Bitdefender\\\\\\\", \\\\\\\"bitdefender\\\\\\\",\\\\r\\\\n    \\\\\\\"BlackBerry Cylance\\\\\\\", \\\\\\\"cylance\\\\\\\",\\\\r\\\\n    \\\\\\\"Check Point\\\\\\\", \\\\\\\"checkpoint\\\\\\\",\\\\r\\\\n    \\\\\\\"Cisco\\\\\\\", \\\\\\\"cisco\\\\\\\",\\\\r\\\\n    \\\\\\\"CrowdStrike\\\\\\\", \\\\\\\"crowdstrike\\\\\\\",\\\\r\\\\n    \\\\\\\"Cybereason\\\\\\\", \\\\\\\"cybereason\\\\\\\",\\\\r\\\\n    \\\\\\\"CyCraft\\\\\\\", \\\\\\\"cycraft\\\\\\\",\\\\r\\\\n    \\\\\\\"Cynet\\\\\\\", \\\\\\\"cynet\\\\\\\",\\\\r\\\\n    \\\\\\\"Elastic\\\\\\\", \\\\\\\"elastic\\\\\\\",\\\\r\\\\n    \\\\\\\"ESET\\\\\\\", \\\\\\\"eset\\\\\\\",\\\\r\\\\n    \\\\\\\"F-Secure\\\\\\\", \\\\\\\"f-secure\\\\\\\",\\\\r\\\\n    \\\\\\\"Fidelis\\\\\\\", \\\\\\\"fidelis\\\\\\\",\\\\r\\\\n    \\\\\\\"FireEye\\\\\\\", \\\\\\\"fireeye\\\\\\\",\\\\r\\\\n    \\\\\\\"Fortinet\\\\\\\", \\\\\\\"fortinet\\\\\\\",\\\\r\\\\n    \\\\\\\"GoSecure\\\\\\\", \\\\\\\"gosecure\\\\\\\",\\\\r\\\\n    \\\\\\\"Malwarebytes\\\\\\\", \\\\\\\"malwarebytes\\\\\\\",\\\\r\\\\n    \\\\\\\"McAfee\\\\\\\", \\\\\\\"mcafee\\\\\\\",\\\\r\\\\n    \\\\\\\"Micro Focus\\\\\\\", \\\\\\\"microfocus\\\\\\\",\\\\r\\\\n    \\\\\\\"Microsoft\\\\\\\", \\\\\\\"microsoft\\\\\\\",\\\\r\\\\n    \\\\\\\"Open Text\\\\\\\", \\\\\\\"opentext\\\\\\\",\\\\r\\\\n    \\\\\\\"Palo Alto Networks\\\\\\\", \\\\\\\"paloaltonetworks\\\\\\\",\\\\r\\\\n    \\\\\\\"ReaQta\\\\\\\", \\\\\\\"reaqta\\\\\\\",\\\\r\\\\n    \\\\\\\"SentinelOne\\\\\\\", \\\\\\\"sentinelone\\\\\\\",\\\\r\\\\n    \\\\\\\"Sophos\\\\\\\", \\\\\\\"sophos\\\\\\\",\\\\r\\\\n    \\\\\\\"Symantec\\\\\\\", \\\\\\\"symantec\\\\\\\",\\\\r\\\\n    \\\\\\\"Trend Micro\\\\\\\", \\\\\\\"trendmicro\\\\\\\",\\\\r\\\\n    \\\\\\\"Uptycs\\\\\\\", \\\\\\\"uptycs\\\\\\\",\\\\r\\\\n    \\\\\\\"VMware Carbon Black\\\\\\\", \\\\\\\"vmware\\\\\\\"\\\\r\\\\n];\\\\r\\\\n// Gets list of all vendors and tested scenarios\\\\r\\\\nlet Protections = mitreeval\\\\r\\\\n| where Participant_Name == \\\\\\\"{Participant_2}\\\\\\\"\\\\r\\\\n| project Participant_Name, Adversaries\\\\r\\\\n// iterates through Adversaries array and pulls specified rows\\\\r\\\\n| mv-apply Adversaries on (\\\\r\\\\n    where Adversaries.Display_Name == \\\\\\\"{Evaluation}\\\\\\\"\\\\r\\\\n    | extend Protections = iff(isnotempty(Adversaries.Protections), 1, 0)\\\\r\\\\n    | extend Protection_Steps = Adversaries.Protections.Protection_Tests\\\\r\\\\n    | extend ['Adversary Name'] = Adversaries.Adversary_Name\\\\r\\\\n)\\\\r\\\\n| mv-expand Protection_Steps | evaluate bag_unpack(Protection_Steps)\\\\r\\\\n|  extend\\\\r\\\\n    Substeps = column_ifexists(\\\\\\\"Substeps\\\\\\\", todynamic(\\\\\\\"[]\\\\\\\")), \\\\r\\\\n    Test_Num = column_ifexists(\\\\\\\"Test_Num\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Protection_Type = column_ifexists(\\\\\\\"Protection_Type\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Protection_Note = column_ifexists(\\\\\\\"Protection_Note\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Tactic = column_ifexists(\\\\\\\"Tactic\\\\\\\", todynamic(\\\\\\\"[]\\\\\\\")), \\\\r\\\\n    Technique = column_ifexists(\\\\\\\"Technique\\\\\\\", todynamic(\\\\\\\"[]\\\\\\\"))\\\\r\\\\n| mv-expand Substeps\\\\r\\\\n| evaluate bag_unpack(Substeps, columnsConflict='replace_source')\\\\r\\\\n| evaluate bag_unpack (Tactic, columnsConflict='replace_source')\\\\r\\\\n| evaluate bag_unpack (Technique, columnsConflict='replace_source')\\\\r\\\\n| extend \\\\r\\\\n    Tactic_Id = column_ifexists(\\\\\\\"Tactic_Id\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Tactic_Name = column_ifexists(\\\\\\\"Tactic_Name\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Technique_Id = column_ifexists(\\\\\\\"Technique_Id\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Technique_Name = column_ifexists(\\\\\\\"Technique_Name\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Test_Name = column_ifexists(\\\\\\\"Test_Name\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Test_Group = column_ifexists(\\\\\\\"Test_Group\\\\\\\", \\\\\\\"\\\\\\\"),\\\\r\\\\n    Criteria = column_ifexists(\\\\\\\"Criteria\\\\\\\", \\\\\\\"\\\\\\\");\\\\r\\\\n// Builds table of blocked as well as labeling tests that executed successfully\\\\r\\\\nlet blocked = Protections\\\\r\\\\n| summarize by Participant_Name, Test_Num\\\\r\\\\n| join kind=leftouter (Protections | where Protection_Type == \\\\\\\"Blocked\\\\\\\" or Protection_Note has \\\\\\\"Test was not successfully executed\\\\\\\") on Test_Num\\\\r\\\\n| project-away Participant_Name1\\\\r\\\\n| project Test_Num, Result = iff(isnotempty(Protection_Note), Protection_Note, \\\\\\\"All techniques for this test case were executed.\\\\\\\");\\\\r\\\\nProtections\\\\r\\\\n| join blocked on Test_Num\\\\r\\\\n| join kind=leftouter vendorNames on Participant_Name\\\\r\\\\n| extend tacticLink = strcat(\\\\\\\"https://attack.mitre.org/tactics/\\\\\\\",Tactic_Id)\\\\r\\\\n| extend techniqueLink = strcat(\\\\\\\"https://attack.mitre.org/techniques/\\\\\\\",Technique_Id)\\\\r\\\\n| extend evaluationLink = strcat(\\\\\\\"https://attackevals.mitre-engenuity.org/enterprise/participants/\\\\\\\",shortName,\\\\\\\"/results.html?adversary=carbanak_fin7&scenario=protections\\\\\\\")\\\\r\\\\n| project Test_Group, Test_Num, Result, Test_Name, Tactic_Id, Tactic_Name, Technique_Id, Technique_Name, Criteria, tacticLink, techniqueLink, evaluationLink\\\\r\\\\n| sort by Test_Num asc\\\\r\\\\n//| project-away Protections, Participant_Name, Adversaries, ['Adversary Name'], Test_Description, Test_Screenshots, Footnotes, Protection_Note, Protection_Type, Screenshots, Subtechnique\\\",\\\"clusterName\\\":\\\"teachjing.westus\\\",\\\"databaseName\\\":\\\"securitydata\\\"}\",\"size\":0,\"title\":\"{Participant_2} - {Evaluation} - Protection Evaluation Results\",\"noDataMessage\":\"No Protections Testing Results could be obtained for {Participant_2}. \",\"noDataMessageStyle\":4,\"queryType\":9,\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Test_Group\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"evaluationLink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Tactic_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"tacticLink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Technique_Id\",\"formatter\":1,\"formatOptions\":{\"linkColumn\":\"techniqueLink\",\"linkTarget\":\"Url\"}},{\"columnMatch\":\"Result\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\"contains\",\"thresholdValue\":\"All techniques for this test case were executed\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\"contains\",\"thresholdValue\":\"was blocked\",\"representation\":\"green\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"tacticLink\",\"formatter\":5},{\"columnMatch\":\"techniqueLink\",\"formatter\":5},{\"columnMatch\":\"evaluationLink\",\"formatter\":5}],\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 7 - Copy - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"tab\",\"comparison\":\"isEqualTo\",\"value\":\"comparisonTool\"},\"name\":\"Group - Comparison\"}],\"isLocked\":false,\"fallbackResourceIds\":[\"Azure Security Center\"]}"
    },
    "resources": [
      {
        "condition": "[equals(parameters('workspaceLocation'), 'Azure Sentinel')]",
        "name": "[guid(concat(variables('workbookid'),'sentinel'))]",
        "type": "microsoft.insights/workbooks",
        "location": "[resourceGroup().location]",
        "apiVersion": "2018-06-17-preview",
        "dependsOn": [],
        "kind": "shared",
        "properties": {
          "displayName": "[parameters('workbookDisplayName')]",
          "serializedData": "[variables('serializedData')]",
          "version": "1.0",
          "sourceId": "[parameters('logAnalyticsWorkspaceID')]",
          "category": "sentinel"
        }
      },
      {
        "condition": "[equals(parameters('workspaceLocation'), 'Azure Security Center')]",
        "name": "[guid(concat(variables('workbookid'),'asc'))]",
        "type": "microsoft.insights/workbooks",
        "location": "[resourceGroup().location]",
        "apiVersion": "2018-06-17-preview",
        "dependsOn": [],
        "kind": "shared",
        "properties": {
          "displayName": "[parameters('workbookDisplayName')]",
          "serializedData": "[variables('serializedData')]",
          "version": "1.0",
          "sourceId": "Azure Security Center",
          "category": "workbook"
        }
      },
      {
        "condition": "[equals(parameters('workspaceLocation'), 'Log Analytics')]",
        "name": "[guid(concat(variables('workbookid'),'la'))]",
        "type": "microsoft.insights/workbooks",
        "location": "[resourceGroup().location]",
        "apiVersion": "2018-06-17-preview",
        "dependsOn": [],
        "kind": "shared",
        "properties": {
          "displayName": "[parameters('workbookDisplayName')]",
          "serializedData": "[variables('serializedData')]",
          "version": "1.0",
          "sourceId": "[parameters('logAnalyticsWorkspaceID')]",
          "category": "workbook"
        }
      }
    ],
    "outputs": {
      "workbookId": {
        "type": "string",
        "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
      }
    },
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
}
